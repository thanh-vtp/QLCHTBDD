@model QLCHTBDD_62131904.ViewModels.ProductViewModel

@{
    ViewBag.Title = Model.TenSanPham;
    Layout = "~/Views/Shared/_MainLayout.cshtml";
}

<div class="container product-detail">
    <!-- Tên sản phẩm trên cùng -->
    <h1 class="product-title">@Model.TenSanPham</h1>

    <div class="row justify-content-center">
        <!-- Vùng ảnh sản phẩm -->
        <div class="col-lg-8">
            <div class="image-section">
                <!-- Ảnh chính -->
                <img id="main-image" src="@Model.HinhAnh" alt="@Model.TenSanPham" class="img-fluid main-image" />
            </div>

            <div class="sub-image">
                <!-- Danh sách ảnh phụ (bao gồm cả ảnh chính) -->
                <div class="image-thumbnails">
                    <!-- Ảnh chính -->
                    <img src="@Model.HinhAnh" alt="Ảnh chính" class="thumbnail-image active" onclick="updateMainImage(this)" />

                    <!-- Ảnh phụ -->
                    @foreach (var image in Model.HinhAnhPhu)
                    {
                        <img src="@image" alt="Ảnh phụ" class="thumbnail-image" onclick="updateMainImage(this)" />
                    }
                </div>
            </div>
        </div>

        <!-- Vùng thông tin sản phẩm -->
        <div class="col-lg-4">
            <!-- Phần ROM, màu và giá -->
            <div class="product-info">
                <div class="info-section">
                    <h4>Chọn ROM:</h4>
                    <div class="rom-options">
                        @foreach (var rom in Model.Variants.Select(v => v.ROM).Distinct())
                        {
                            <button class="btn rom-option"
                                    data-price="@Model.Variants.First(v => v.ROM == rom).DonGia"
                                    data-variant-id="@Model.Variants.First(v => v.ROM == rom).BienTheID"
                                    onclick="selectRom(this)">
                                @rom
                            </button>
                        }
                    </div>
                </div>

                <div class="info-section">
                    <h4>Chọn màu:</h4>
                    <div class="color-options">
                        @foreach (var color in Model.Variants.Select(v => v.MauSac).Distinct())
                        {
                            <button class="btn color-option"
                                    data-main-image="@Model.Variants.First(v => v.MauSac == color).HinhAnhChinh"
                                    data-thumbnails='@Html.Raw(Json.Encode(Model.Variants.First(v => v.MauSac == color).HinhAnhPhu))'
                                    data-variant-id="@Model.Variants.First(v => v.MauSac == color).BienTheID"
                                    onclick="selectColor(this)">
                                @color
                            </button>
                        }
                    </div>
                </div>

                <div class="info-section">
                    <h4>Giá:</h4>
                    <p class="text-danger price">
                        <span id="product-price">
                            @if (Model.Variants != null && Model.Variants.Any())
                            {
                                @Model.Variants.First().DonGia.ToString("N0")
                            }
                            else
                            {
                                @:Liên hệ
                            }
                        </span>đ
                    </p>
                </div>
            </div>

            <!-- Nút thêm vào giỏ -->
            <form action="@Url.Action("ThemVaoGio", "GioHang_62131904")" method="post">
                <!-- Input ẩn để lưu mã biến thể -->
                <input type="hidden" id="BienTheID" name="maBT" value="@Model.Variants.FirstOrDefault()?.BienTheID" />

                <div class="form-group">
                    <label for="SoLuong">Số lượng:</label>
                    <input type="number" id="SoLuong" name="soLuong" value="1" min="1" class="form-control" />
                </div>

                <button type="submit" class="btn btn-primary btn-add-to-cart">Thêm vào giỏ</button>
            </form>
        </div>
    </div>
</div>


<style>
    .container.product-detail {
        margin-top: 20px;
        font-family: Arial, sans-serif;
    }

    /* Tên sản phẩm */
    .product-title {
        text-align: left;
        font-size: 24px;
        font-weight: bold;
        color: #333;
        margin-bottom: 20px;
    }

    /* Vùng ảnh chính */
    .image-section {
        align-items: center;
        text-align: center;
        background: #fff;
        border: 1px solid #ddd;
        border-radius: 8px;
        padding: 20px;
        box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
        margin-bottom: 10px;
    }

    .main-image {
        max-width: 100%;
        height: auto;
        border-radius: 8px;
        box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
        border: 1px solid #ddd;
    }

    /* Vùng ảnh phụ */
    .sub-image {
        background: #fff;
        border: 1px solid #ddd;
        border-radius: 8px;
        padding: 20px;
        box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
        margin-bottom: 20px;
    }

    .image-thumbnails {
        display: flex;
        justify-content: center;
        gap: 10px;
    }

    .thumbnail-image {
        width: 80px;
        height: 80px;
        object-fit: cover;
        border: 1px solid #ddd;
        cursor: pointer;
        border-radius: 5px;
        transition: transform 0.2s ease, border-color 0.2s ease;
    }

        .thumbnail-image:hover {
            border-color: blue;
            transform: scale(1.1);
        }

    /* Vùng thông tin sản phẩm */
    .product-info {
        background: #fff;
        border: 1px solid #ddd;
        border-radius: 8px;
        padding: 20px;
        box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
        margin-bottom: 20px;
    }

    /* Phần ROM, màu sắc và giá */
    .info-section {
        margin-bottom: 20px;
    }

    .rom-options, .color-options {
        display: flex;
        gap: 10px;
        margin-top: 10px;
        flex-wrap: wrap;
    }

    .rom-option, .color-option {
        padding: 10px 20px;
        cursor: pointer;
        border: 1px solid #ccc;
        border-radius: 5px;
        transition: all 0.2s;
        font-size: 14px;
        background: #f9f9f9;
    }

        .rom-option:hover, .color-option:hover {
            background-color: #f0f0f0;
            border-color: blue;
        }

        .rom-option.active, .color-option.active {
            background-color: #007bff;
            color: #fff;
            border-color: #007bff;
        }

    /* Phần giá */
    .price {
        font-size: 24px;
        font-weight: bold;
        color: red;
    }

    /* Nút thêm vào giỏ */
    .action-section {
        background: #fff;
        border: 1px solid #ddd;
        border-radius: 8px;
        padding: 20px;
        text-align: center;
        box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
    }

    .btn-add-to-cart {
        padding: 12px 25px;
        font-size: 16px;
        font-weight: bold;
        background: #007bff;
        color: #fff;
        border: none;
        border-radius: 5px;
        transition: background-color 0.3s ease, transform 0.2s ease;
    }

        .btn-add-to-cart:hover {
            background-color: #0056b3;
            transform: scale(1.05);
        }

        .btn-add-to-cart:focus {
            outline: none;
        }
</style>

<script>
    // Chọn ROM
    function selectRom(button) {
        const variantId = button.getAttribute("data-variant-id");
        const price = button.getAttribute("data-price");

        // Cập nhật giá và mã biến thể
        document.getElementById("product-price").textContent = parseInt(price).toLocaleString("vi-VN");
        document.getElementById("BienTheID").value = variantId;

        // Cập nhật nút được chọn
        document.querySelectorAll(".rom-option").forEach(btn => btn.classList.remove("active"));
        button.classList.add("active");
    }

    // Chọn màu
    function selectColor(button) {
        const variantId = button.getAttribute("data-variant-id");
        const mainImageSrc = button.getAttribute("data-main-image");
        const thumbnails = JSON.parse(button.getAttribute("data-thumbnails"));

        // Cập nhật ảnh chính
        document.getElementById("main-image").src = mainImageSrc;

        // Tạo danh sách ảnh phụ bao gồm cả ảnh chính
        const thumbnailContainer = document.querySelector(".image-thumbnails");
        thumbnailContainer.innerHTML = ""; // Xóa các ảnh cũ

        // Thêm ảnh chính vào danh sách thumbnails
        const mainThumbnail = document.createElement("img");
        mainThumbnail.src = mainImageSrc;
        mainThumbnail.className = "thumbnail-image active"; // Mặc định ảnh chính được chọn
        mainThumbnail.onclick = () => updateMainImage(mainThumbnail);
        thumbnailContainer.appendChild(mainThumbnail);

        // Thêm ảnh phụ vào danh sách thumbnails
        thumbnails.forEach(imageSrc => {
            const thumbnail = document.createElement("img");
            thumbnail.src = imageSrc;
            thumbnail.className = "thumbnail-image";
            thumbnail.onclick = () => updateMainImage(thumbnail);
            thumbnailContainer.appendChild(thumbnail);
        });

        // Cập nhật mã biến thể
        document.getElementById("BienTheID").value = variantId;

        // Cập nhật nút được chọn
        document.querySelectorAll(".color-option").forEach(btn => btn.classList.remove("active"));
        button.classList.add("active");
    }


    // Cập nhật ảnh chính khi nhấn vào ảnh phụ
    function updateMainImage(thumbnail) {
        const mainImage = document.getElementById("main-image");
        mainImage.src = thumbnail.src;

        // Làm nổi bật ảnh được chọn
        document.querySelectorAll(".thumbnail-image").forEach(img => img.classList.remove("active"));
        thumbnail.classList.add("active");
    }
</script>
